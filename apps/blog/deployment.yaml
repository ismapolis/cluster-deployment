apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog
  namespace: ismapolis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blog
  template:
    metadata:
      labels:
        app: blog
    spec:
      containers:
        # Contenedor principal: Nginx sirve los HTML
        - name: blog
          image: ismapolis/polis-blog:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: dist
              mountPath: /usr/share/nginx/html
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 20

        # Sidecar: detecta cambios en los posts y reconstruye
        - name: blog-builder
          image: ismapolis/polis-blog:latest
          command: ["sh", "-c"]
          args:
            - |
              apk add --no-cache inotify-tools
              echo "Doing initial build..."
              npm install
              npm run build
              cp -r /app/dist/* /dist
              echo "Initial build complete. Watching for changes..."
              while true; do
                inotifywait -e create,modify,delete -r /app/src/content
                echo "Detected change, rebuilding..."
                npm run build
                cp -r /app/dist/* /dist
              done
          volumeMounts:
            - name: content
              mountPath: /app/src/content
            - name: dist
              mountPath: /dist

      volumes:
        - name: content
          persistentVolumeClaim:
            claimName: blog-content-pvc
        - name: dist
          emptyDir: {}
